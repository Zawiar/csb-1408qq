{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","immutable__WEBPACK_IMPORTED_MODULE_2__","redux__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","react_planner__WEBPACK_IMPORTED_MODULE_5__","AppState","Map","react-planner","PlannerModels","State","store","createStore","state","action","update","plannerState","PlannerReducer","window","devToolsExtension","f","plugins","PlannerPlugins","Keyboard","Autosave","ConsoleDebugger","ReactDOM","render","a","createElement","width","height","stateExtractor","get","document","getElementById"],"mappings":"gIAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,IAiBIY,EAAWC,YAAI,CACjBC,gBAAiB,IAAIC,IAAcC,QAYjCC,EAAQC,YARE,SAACC,EAAOC,GAKpB,OAHAD,GADAA,EAAQA,GAASP,GACHS,OAAO,gBAAiB,SAAAC,GAAY,OAChDC,YAAeD,EAAcF,MAO/B,KACAI,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAC,GAAC,OAAIA,IAG3DC,EAAU,CACZC,IAAeC,WACfD,IAAeE,SAAS,oBACxBF,IAAeG,mBAIjBC,IAASC,OACP7B,EAAA8B,EAAAC,cAACzB,EAAA,EAAD,CAAUO,MAAOA,GACfb,EAAA8B,EAAAC,cAACxB,EAAA,EAAD,CAEEyB,MAAO,IACPC,OAAQ,IACRV,QAASA,EACTW,eAAgB,SAAAnB,GAAK,OAAIA,EAAMoB,IAAI,qBAGvCC,SAASC,eAAe","file":"static/js/main.710015bd.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map } from \"immutable\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\n//download this demo catalog https://github.com/cvdlab/react-planner/tree/master/demo/src/catalog\n// import MyCatalog from \"./catalog/mycatalog\";\n\nimport {\n  Models as PlannerModels,\n  reducer as PlannerReducer,\n  ReactPlanner,\n  Plugins as PlannerPlugins\n} from \"react-planner\";\n\n//define state\nlet AppState = Map({\n  \"react-planner\": new PlannerModels.State()\n});\n\n//define reducer\nlet reducer = (state, action) => {\n  state = state || AppState;\n  state = state.update(\"react-planner\", plannerState =>\n    PlannerReducer(plannerState, action)\n  );\n  return state;\n};\n\nlet store = createStore(\n  reducer,\n  null,\n  window.devToolsExtension ? window.devToolsExtension() : f => f\n);\n\nlet plugins = [\n  PlannerPlugins.Keyboard(),\n  PlannerPlugins.Autosave(\"react-planner_v0\"),\n  PlannerPlugins.ConsoleDebugger()\n];\n\n//render\nReactDOM.render(\n  <Provider store={store}>\n    <ReactPlanner\n      // catalog={MyCatalog}\n      width={800}\n      height={600}\n      plugins={plugins}\n      stateExtractor={state => state.get(\"react-planner\")}\n    />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}